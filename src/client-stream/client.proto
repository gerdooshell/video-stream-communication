syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "src/client-stream";

message VideoConfigLive {
  int32 cameraId = 1;
  int32 resolution = 2;
}

enum PlaybackAcceleration {
  MaintainSpeed = 0;
  Faster = 1;
  Slower = 2;
}

message VideoConfigArchive {
  int32 archiveId = 1;
  int32 resolution = 2;
  PlaybackAcceleration playbackAcceleration = 3;
  optional int32 fromSecond = 4;
}

message ArchiveListRequest {
  ArchivedVideoFilter filter = 1;
  int32 pageSize = 2;
  int32 pageOffset = 3;
}

message ArchiveListResponse {
  int32 totalSize = 1;
  int32 fromIndex = 2;
  int32 toIndex = 3;
  repeated ArchivedEntityMetaInfo config = 4;
}

message ArchivedVideoFilter {
  bool containsMotions = 1;
  google.protobuf.Timestamp startDate = 2;
  google.protobuf.Timestamp endDate = 3;
}

message ArchivedEntityMetaInfo {
  int32 id = 1;
  ArchivedVideoFilter filter = 2;
  int32 maxResolution = 3;
}

message CameraList {
  repeated CameraInfo cameras = 1;
}

message CameraInfo {
  int32 id = 1;
  string location = 2;
}

message ClientVideoFrame {
  bytes image = 1;
  FrameClientMetaData metaData = 2;
}

message FrameClientMetaData {
  int32 frequency = 1;
  google.protobuf.Timestamp timestamp = 2;
}

service ClientVideoStream {
  rpc GetCameraList(google.protobuf.Empty) returns (CameraList) {};
  rpc GetArchivedList(ArchiveListRequest) returns (ArchiveListResponse) {};
  rpc StreamLiveVideo(stream VideoConfigLive) returns (stream ClientVideoFrame) {};
  rpc StreamArchivedVideo(stream VideoConfigArchive) returns (stream ClientVideoFrame) {};
}
